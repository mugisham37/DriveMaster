version: "3.8"

services:
  kong-database:
    image: postgres:15-alpine
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong_password
      POSTGRES_DB: kong
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - kong-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 30s
      timeout: 10s
      retries: 3

  kong-migrations:
    image: kong:3.4-alpine
    container_name: kong-migrations
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong_password
      KONG_PG_DATABASE: kong
    networks:
      - kong-net
    restart: on-failure

  kong:
    image: kong:3.4-alpine
    container_name: kong-gateway
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migrations:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PORT: 5432
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong_password
      KONG_PG_DATABASE: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_PLUGINS: bundled,jwt,rate-limiting,request-transformer,response-transformer,prometheus,opentelemetry
      KONG_LOG_LEVEL: info
    ports:
      - "8000:8000" # Proxy HTTP
      - "8443:8443" # Proxy HTTPS
      - "8001:8001" # Admin API
      - "8002:8002" # Admin GUI
    networks:
      - kong-net
      - adaptive-learning-network
    volumes:
      - ./kong.conf:/etc/kong/kong.conf:ro
      - ./plugins:/usr/local/share/lua/5.1/kong/plugins
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  konga:
    image: pantsel/konga:latest
    container_name: konga-admin
    depends_on:
      - kong
    environment:
      NODE_ENV: production
      KONGA_HOOK_TIMEOUT: 120000
    ports:
      - "1337:1337"
    networks:
      - kong-net
    restart: unless-stopped

volumes:
  kong_data:

networks:
  kong-net:
    driver: bridge
  adaptive-learning-network:
    external: true
