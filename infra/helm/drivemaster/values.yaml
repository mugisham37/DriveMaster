# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: "fast-ssd"

# Application configuration
app:
  name: drivemaster
  environment: production
  domain: drivemaster.com

# Service configurations
services:
  userService:
    enabled: true
    name: user-service
    image:
      repository: drivemaster/user-service
      tag: latest
      pullPolicy: IfNotPresent
    replicaCount: 3
    port: 3001
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 3
      maxReplicas: 20
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80
    
  adaptiveService:
    enabled: true
    name: adaptive-service
    image:
      repository: drivemaster/adaptive-service
      tag: latest
      pullPolicy: IfNotPresent
    replicaCount: 3
    port: 3002
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    autoscaling:
      enabled: true
      minReplicas: 3
      maxReplicas: 15
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80
    
  contentService:
    enabled: true
    name: content-service
    image:
      repository: drivemaster/content-service
      tag: latest
      pullPolicy: IfNotPresent
    replicaCount: 2
    port: 3003
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80
    
  analyticsService:
    enabled: true
    name: analytics-service
    image:
      repository: drivemaster/analytics-service
      tag: latest
      pullPolicy: IfNotPresent
    replicaCount: 2
    port: 3004
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 8
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80
    
  engagementService:
    enabled: true
    name: engagement-service
    image:
      repository: drivemaster/engagement-service
      tag: latest
      pullPolicy: IfNotPresent
    replicaCount: 2
    port: 3005
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 70
      targetMemoryUtilizationPercentage: 80

# Infrastructure dependencies
postgresql:
  enabled: true
  auth:
    postgresPassword: "prod_password_123"
    username: "drivemaster"
    password: "prod_password_123"
    database: "drivemaster_prod"
  primary:
    persistence:
      enabled: true
      size: 100Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2
        memory: 4Gi
    configuration: |
      max_connections = 200
      shared_buffers = 256MB
      effective_cache_size = 1GB
      maintenance_work_mem = 64MB
      checkpoint_completion_target = 0.9
      wal_buffers = 16MB
      default_statistics_target = 100
      random_page_cost = 1.1
      effective_io_concurrency = 200
      shared_preload_libraries = 'pg_stat_statements'
      pg_stat_statements.track = all
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

redis:
  enabled: true
  auth:
    enabled: true
    password: "prod_redis_123"
  master:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

kafka:
  enabled: true
  replicaCount: 3
  persistence:
    enabled: true
    size: 50Gi
    storageClass: "fast-ssd"
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1
      memory: 2Gi
  metrics:
    kafka:
      enabled: true
    jmx:
      enabled: true
  zookeeper:
    replicaCount: 3
    persistence:
      enabled: true
      size: 10Gi
      storageClass: "fast-ssd"

elasticsearch:
  enabled: true
  replicas: 3
  minimumMasterNodes: 2
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 1
      memory: 4Gi
  volumeClaimTemplate:
    accessModes: ["ReadWriteOnce"]
    storageClassName: "fast-ssd"
    resources:
      requests:
        storage: 100Gi

# API Gateway
kong:
  enabled: true
  image:
    repository: kong
    tag: "3.4.2-alpine"
  replicaCount: 2
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Monitoring stack
monitoring:
  prometheus:
    enabled: true
    server:
      persistentVolume:
        enabled: true
        size: 50Gi
        storageClass: "fast-ssd"
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 1
          memory: 2Gi
      retention: "200h"
    alertmanager:
      enabled: true
      persistentVolume:
        enabled: true
        size: 10Gi
        storageClass: "fast-ssd"
    
  grafana:
    enabled: true
    persistence:
      enabled: true
      size: 10Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    adminPassword: "admin123"
    
  jaeger:
    enabled: true
    storage:
      type: elasticsearch
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    
  loki:
    enabled: true
    persistence:
      enabled: true
      size: 50Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
  hosts:
    - host: api.drivemaster.com
      paths:
        - path: /
          pathType: Prefix
          service: kong
    - host: grafana.drivemaster.com
      paths:
        - path: /
          pathType: Prefix
          service: grafana
  tls:
    - secretName: drivemaster-tls
      hosts:
        - api.drivemaster.com
        - grafana.drivemaster.com

# Security
security:
  networkPolicies:
    enabled: true
  podSecurityPolicy:
    enabled: true
  rbac:
    enabled: true

# Backup and disaster recovery
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: "30d"
  storage:
    type: "s3"
    bucket: "drivemaster-backups"
    region: "us-west-2"

# Resource quotas and limits
resourceQuota:
  enabled: true
  hard:
    requests.cpu: "10"
    requests.memory: "20Gi"
    limits.cpu: "20"
    limits.memory: "40Gi"
    persistentvolumeclaims: "50"

# Pod disruption budgets
podDisruptionBudget:
  enabled: true
  minAvailable: 1