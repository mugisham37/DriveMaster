# Chaos Engineering Experiments for DriveMaster Platform
apiVersion: v1
kind: ConfigMap
metadata:
  name: chaos-experiments
  namespace: drivemaster
data:
  # Network Latency Experiment
  network-latency.yaml: |
    apiVersion: chaos-mesh.org/v1alpha1
    kind: NetworkChaos
    metadata:
      name: network-latency-experiment
      namespace: drivemaster
    spec:
      action: delay
      mode: one
      selector:
        namespaces:
          - drivemaster
        labelSelectors:
          app: user-service
      delay:
        latency: "100ms"
        correlation: "100"
        jitter: "0ms"
      duration: "5m"
      scheduler:
        cron: "@every 1h"

  # Pod Failure Experiment
  pod-failure.yaml: |
    apiVersion: chaos-mesh.org/v1alpha1
    kind: PodChaos
    metadata:
      name: pod-failure-experiment
      namespace: drivemaster
    spec:
      action: pod-kill
      mode: fixed-percent
      value: "25"
      selector:
        namespaces:
          - drivemaster
        labelSelectors:
          component: backend
      duration: "2m"
      scheduler:
        cron: "0 */6 * * *"  # Every 6 hours

  # CPU Stress Experiment
  cpu-stress.yaml: |
    apiVersion: chaos-mesh.org/v1alpha1
    kind: StressChaos
    metadata:
      name: cpu-stress-experiment
      namespace: drivemaster
    spec:
      mode: one
      selector:
        namespaces:
          - drivemaster
        labelSelectors:
          app: adaptive-service
      stressors:
        cpu:
          workers: 2
          load: 80
      duration: "3m"
      scheduler:
        cron: "0 */4 * * *"  # Every 4 hours

  # Memory Stress Experiment
  memory-stress.yaml: |
    apiVersion: chaos-mesh.org/v1alpha1
    kind: StressChaos
    metadata:
      name: memory-stress-experiment
      namespace: drivemaster
    spec:
      mode: one
      selector:
        namespaces:
          - drivemaster
        labelSelectors:
          app: analytics-service
      stressors:
        memory:
          workers: 1
          size: "512MB"
      duration: "2m"
      scheduler:
        cron: "0 */8 * * *"  # Every 8 hours

  # Database Connection Chaos
  database-chaos.yaml: |
    apiVersion: chaos-mesh.org/v1alpha1
    kind: NetworkChaos
    metadata:
      name: database-connection-chaos
      namespace: drivemaster
    spec:
      action: partition
      mode: one
      selector:
        namespaces:
          - drivemaster
        labelSelectors:
          app: postgresql
      direction: to
      target:
        mode: all
        selector:
          namespaces:
            - drivemaster
          labelSelectors:
            component: backend
      duration: "1m"
      scheduler:
        cron: "0 */12 * * *"  # Every 12 hours

  # Redis Cache Failure
  redis-chaos.yaml: |
    apiVersion: chaos-mesh.org/v1alpha1
    kind: PodChaos
    metadata:
      name: redis-failure-experiment
      namespace: drivemaster
    spec:
      action: pod-failure
      mode: one
      selector:
        namespaces:
          - drivemaster
        labelSelectors:
          app: redis
      duration: "30s"
      scheduler:
        cron: "0 */6 * * *"  # Every 6 hours

  # Kafka Message Loss Simulation
  kafka-chaos.yaml: |
    apiVersion: chaos-mesh.org/v1alpha1
    kind: NetworkChaos
    metadata:
      name: kafka-message-loss
      namespace: drivemaster
    spec:
      action: loss
      mode: one
      selector:
        namespaces:
          - drivemaster
        labelSelectors:
          app: kafka
      loss:
        loss: "10"
        correlation: "0"
      duration: "2m"
      scheduler:
        cron: "0 */8 * * *"  # Every 8 hours

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chaos-monitoring
  namespace: drivemaster
data:
  chaos-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Chaos Engineering Dashboard",
        "tags": ["chaos", "resilience"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Active Chaos Experiments",
            "type": "stat",
            "targets": [
              {
                "expr": "count(chaos_mesh_experiments_total)"
              }
            ],
            "gridPos": {
              "h": 4,
              "w": 6,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Service Recovery Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(service_recovery_duration_seconds_bucket[5m]))"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 4
            }
          },
          {
            "id": 3,
            "title": "Error Rate During Chaos",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{status=~\"5..\"}[5m]) / rate(http_requests_total[5m])"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 4
            }
          },
          {
            "id": 4,
            "title": "Circuit Breaker Status",
            "type": "stat",
            "targets": [
              {
                "expr": "circuit_breaker_state"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "mappings": [
                  {
                    "options": {
                      "0": {
                        "text": "CLOSED",
                        "color": "green"
                      },
                      "1": {
                        "text": "OPEN",
                        "color": "red"
                      },
                      "2": {
                        "text": "HALF_OPEN",
                        "color": "yellow"
                      }
                    }
                  }
                ]
              }
            },
            "gridPos": {
              "h": 4,
              "w": 6,
              "x": 18,
              "y": 0
            }
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: chaos-experiment-runner
  namespace: drivemaster
spec:
  schedule: "0 */2 * * *"  # Every 2 hours
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: chaos-runner
            image: chaosiq/chaostoolkit:latest
            command:
            - /bin/sh
            - -c
            - |
              # Run chaos experiments based on system health
              SYSTEM_HEALTH=$(curl -s http://prometheus:9090/api/v1/query?query=up | jq -r '.data.result | length')
              
              if [ "$SYSTEM_HEALTH" -gt 5 ]; then
                echo "System healthy, running chaos experiments..."
                
                # Randomly select and run an experiment
                EXPERIMENTS=("network-latency" "pod-failure" "cpu-stress" "memory-stress")
                SELECTED=${EXPERIMENTS[$RANDOM % ${#EXPERIMENTS[@]}]}
                
                echo "Running experiment: $SELECTED"
                kubectl apply -f /chaos-experiments/$SELECTED.yaml
                
                # Wait for experiment duration
                sleep 300
                
                # Clean up
                kubectl delete -f /chaos-experiments/$SELECTED.yaml
              else
                echo "System unhealthy, skipping chaos experiments"
              fi
            volumeMounts:
            - name: chaos-experiments
              mountPath: /chaos-experiments
          volumes:
          - name: chaos-experiments
            configMap:
              name: chaos-experiments
          restartPolicy: OnFailure