groups:
  - name: drivemaster.application
    rules:
      # High Response Time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 0.1
        for: 2m
        labels:
          severity: warning
          service: "{{ $labels.service }}"
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for service {{ $labels.service }}"

      # High Error Rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
        for: 1m
        labels:
          severity: critical
          service: "{{ $labels.service }}"
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for service {{ $labels.service }}"

      # Service Down
      - alert: ServiceDown
        expr: up == 0
        for: 30s
        labels:
          severity: critical
          service: "{{ $labels.job }}"
        annotations:
          summary: "Service is down"
          description: "Service {{ $labels.job }} has been down for more than 30 seconds"

      # High Memory Usage
      - alert: HighMemoryUsage
        expr: (process_resident_memory_bytes / 1024 / 1024) > 512
        for: 5m
        labels:
          severity: warning
          service: "{{ $labels.job }}"
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}MB for service {{ $labels.job }}"

      # High CPU Usage
      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: "{{ $labels.job }}"
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}% for service {{ $labels.job }}"

      # Learning Algorithm Performance
      - alert: LowLearningEffectiveness
        expr: avg_over_time(learning_effectiveness_score[1h]) < 0.7
        for: 10m
        labels:
          severity: warning
          component: "adaptive-learning"
        annotations:
          summary: "Learning effectiveness below threshold"
          description: "Average learning effectiveness score is {{ $value }} over the last hour"

      # User Engagement Alerts
      - alert: LowUserEngagement
        expr: rate(user_session_duration_seconds_total[1h]) < 300
        for: 15m
        labels:
          severity: warning
          component: "engagement"
        annotations:
          summary: "Low user engagement detected"
          description: "Average session duration is {{ $value }}s over the last hour"