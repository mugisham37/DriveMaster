_format_version: "3.0"
_transform: true

# Global plugins for all services
plugins:
  - name: cors
    config:
      origins:
        - "http://localhost:3000"
        - "http://localhost:19006"
        - "https://drivemaster.app"
        - "https://*.drivemaster.app"
      methods:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
        - OPTIONS
      headers:
        - Accept
        - Accept-Version
        - Content-Length
        - Content-MD5
        - Content-Type
        - Date
        - Authorization
        - X-Auth-Token
        - X-Request-ID
        - X-Forwarded-For
        - X-Real-IP
        - User-Agent
      exposed_headers:
        - X-Auth-Token
        - X-Request-ID
        - X-RateLimit-Limit
        - X-RateLimit-Remaining
        - X-Response-Time
        - X-Cache-Status
      credentials: true
      max_age: 3600

  - name: request-id
    config:
      header_name: X-Request-ID
      generator: uuid

  - name: prometheus
    config:
      per_consumer: true
      status_code_metrics: true
      latency_metrics: true
      bandwidth_metrics: true
      upstream_health_metrics: true

  # Global request/response compression
  - name: response-transformer
    config:
      add:
        headers:
          - "X-Powered-By: DriveMaster-API-Gateway"
          - "X-Response-Time: $upstream_response_time"
          - "Vary: Accept-Encoding"

  # Global security headers
  - name: response-transformer
    config:
      add:
        headers:
          - "X-Content-Type-Options: nosniff"
          - "X-Frame-Options: DENY"
          - "X-XSS-Protection: 1; mode=block"
          - "Strict-Transport-Security: max-age=31536000; includeSubDomains"
          - "Referrer-Policy: strict-origin-when-cross-origin"

  # Global request size limiting
  - name: request-size-limiting
    config:
      allowed_payload_size: 50

  # Global IP restriction (can be overridden per service)
  - name: ip-restriction
    config:
      allow: []
      deny: []

  # Global bot detection
  - name: bot-detection
    config:
      allow: []
      deny: []

# Services configuration with advanced features
services:
  - name: user-svc
    url: http://user-svc:3001
    connect_timeout: 5000
    write_timeout: 10000
    read_timeout: 10000
    retries: 3
    # Load balancing configuration
    algorithm: round-robin
    healthchecks:
      active:
        type: http
        http_path: "/health"
        healthy:
          interval: 10
          successes: 2
        unhealthy:
          interval: 10
          http_failures: 3
          timeouts: 3
      passive:
        healthy:
          successes: 3
        unhealthy:
          http_failures: 3
          timeouts: 3
    # Circuit breaker settings
    circuit_breaker:
      failure_threshold: 10
      recovery_timeout: 30
      monitoring_period: 60
    routes:
      - name: user-svc-route
        paths: ["/api/v1/user"]
        strip_path: true
        preserve_host: false
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
    plugins:
      - name: rate-limiting
        config:
          minute: 100
          hour: 1000
          policy: redis
          redis_host: redis
          redis_port: 6379
          redis_password: dev_redis_123
          redis_database: 1
          fault_tolerant: true
          hide_client_headers: false
      - name: request-size-limiting
        config:
          allowed_payload_size: 10
      - name: response-transformer
        config:
          add:
            headers:
              - "X-Service: user-svc"
              - "X-Version: v1"
      - name: jwt
        config:
          uri_param_names: ["jwt"]
          cookie_names: ["jwt"]
          header_names: ["Authorization"]
          claims_to_verify: ["exp", "iat"]
          key_claim_name: "iss"
          secret_is_base64: false
      - name: request-transformer
        config:
          add:
            headers:
              - "X-Forwarded-Service: user-svc"
          remove:
            headers:
              - "X-Internal-Token"
      - name: response-ratelimiting
        config:
          limits:
            video: 
              minute: 10
            image:
              minute: 50
          policy: redis
          redis_host: redis
          redis_port: 6379
          redis_password: dev_redis_123

  - name: adaptive-svc
    url: http://adaptive-svc:3002
    connect_timeout: 5000
    write_timeout: 15000
    read_timeout: 15000
    retries: 3
    routes:
      - name: adaptive-svc-route
        paths: ["/api/v1/adaptive"]
        strip_path: true
        preserve_host: false
        methods: ["GET", "POST", "PUT"]
    plugins:
      - name: rate-limiting
        config:
          minute: 200
          hour: 2000
          policy: redis
          redis_host: redis
          redis_port: 6379
          redis_password: dev_redis_123
          redis_database: 1
          fault_tolerant: true
      - name: proxy-cache
        config:
          response_code: [200, 301, 404]
          request_method: ["GET", "HEAD"]
          content_type: ["text/plain", "application/json"]
          cache_ttl: 300
          strategy: memory
      - name: response-transformer
        config:
          add:
            headers:
              - "X-Service: adaptive-svc"
              - "X-Version: v1"
              - "X-Cache-Status: $upstream_cache_status"
      - name: request-transformer
        config:
          add:
            headers:
              - "X-Forwarded-Service: adaptive-svc"
      # Advanced caching for ML predictions
      - name: proxy-cache-advanced
        config:
          response_code: [200]
          request_method: ["GET"]
          content_type: ["application/json"]
          cache_ttl: 600
          strategy: memory
          memory:
            dictionary_name: "kong_cache"
          vary_headers: ["Authorization", "X-User-Context"]
          cache_control: true
      # Request batching for ML operations
      - name: request-batching
        config:
          batch_size: 10
          batch_timeout: 100
          flush_timeout: 1000

  - name: content-svc
    url: http://content-svc:3003
    connect_timeout: 5000
    write_timeout: 10000
    read_timeout: 10000
    retries: 3
    routes:
      - name: content-svc-route
        paths: ["/api/v1/content"]
        strip_path: true
        preserve_host: false
        methods: ["GET", "POST", "PUT", "DELETE"]
    plugins:
      - name: rate-limiting
        config:
          minute: 300
          hour: 3000
          policy: redis
          redis_host: redis
          redis_port: 6379
          redis_password: dev_redis_123
          redis_database: 1
          fault_tolerant: true
      - name: proxy-cache
        config:
          response_code: [200]
          request_method: ["GET"]
          content_type: ["text/plain", "application/json", "image/jpeg", "image/png"]
          cache_ttl: 3600
          strategy: memory
      - name: response-transformer
        config:
          add:
            headers:
              - "X-Service: content-svc"
              - "X-Version: v1"
              - "Cache-Control: public, max-age=3600"

  - name: analytics-svc
    url: http://analytics-svc:3004
    connect_timeout: 5000
    write_timeout: 20000
    read_timeout: 20000
    retries: 2
    routes:
      - name: analytics-svc-route
        paths: ["/api/v1/analytics"]
        strip_path: true
        preserve_host: false
        methods: ["GET", "POST"]
    plugins:
      - name: rate-limiting
        config:
          minute: 500
          hour: 5000
          policy: redis
          redis_host: redis
          redis_port: 6379
          redis_password: dev_redis_123
          redis_database: 1
          fault_tolerant: true
      - name: request-size-limiting
        config:
          allowed_payload_size: 5
      - name: response-transformer
        config:
          add:
            headers:
              - "X-Service: analytics-svc"
              - "X-Version: v1"

  - name: engagement-svc
    url: http://engagement-svc:3005
    connect_timeout: 5000
    write_timeout: 10000
    read_timeout: 10000
    retries: 3
    routes:
      - name: engagement-svc-route
        paths: ["/api/v1/engagement"]
        strip_path: true
        preserve_host: false
        methods: ["GET", "POST", "PUT", "DELETE"]
    plugins:
      - name: rate-limiting
        config:
          minute: 150
          hour: 1500
          policy: redis
          redis_host: redis
          redis_port: 6379
          redis_password: dev_redis_123
          redis_database: 1
          fault_tolerant: true
      - name: response-transformer
        config:
          add:
            headers:
              - "X-Service: engagement-svc"
              - "X-Version: v1"

# Consumers for JWT authentication
consumers:
  - username: mobile-app
    custom_id: mobile-app-client
    jwt_secrets:
      - key: mobile-app-key
        secret: your-256-bit-secret-key-here-change-in-production
        algorithm: HS256

  - username: web-app
    custom_id: web-app-client
    jwt_secrets:
      - key: web-app-key
        secret: your-256-bit-secret-key-here-change-in-production
        algorithm: HS256
