version: "3.8"

services:
  analytics-dashboard:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/adaptive_learning

      # Redis
      REDIS_URL: redis://redis:6379/1

      # Kafka
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092

      # Application
      DEBUG: "false"
      LOG_LEVEL: INFO

      # CORS
      ALLOWED_ORIGINS: '["http://localhost:3000", "http://localhost:8080"]'

      # Metrics
      METRICS_UPDATE_INTERVAL: 30
      METRICS_RETENTION_HOURS: 24

      # Alerting thresholds
      HIGH_ERROR_RATE_THRESHOLD: 0.05
      HIGH_RESPONSE_TIME_THRESHOLD: 1000.0
      LOW_ACCURACY_THRESHOLD: 0.6
      HIGH_MEMORY_USAGE_THRESHOLD: 0.85
      HIGH_CPU_USAGE_THRESHOLD: 0.80

    volumes:
      - ./static:/app/static
      - ./logs:/app/logs

    depends_on:
      - redis

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    restart: unless-stopped

    networks:
      - analytics-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - analytics-network

  # React dashboard (would be built separately)
  dashboard-ui:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./dashboard-ui/build:/usr/share/nginx/html
      - ./dashboard-ui/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - analytics-dashboard
    restart: unless-stopped
    networks:
      - analytics-network

volumes:
  redis_data:

networks:
  analytics-network:
    driver: bridge
