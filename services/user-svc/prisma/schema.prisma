generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id              String   @id @default(cuid())
  email           String   @unique
  password        String
  roles           String[] @default(["user"]) // Postgres text[]
  emailVerifiedAt DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  profile         UserProfile?

  verificationTokens VerificationToken[]
  passwordResetTokens PasswordResetToken[]
}

model VerificationToken {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  tokenHash  String
  type       String   // 'email_verification'
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  @@index([userId, type, expiresAt])
}

model PasswordResetToken {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  tokenHash  String
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  @@index([userId, expiresAt])
}

@@index([createdAt])

model UserProfile {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  displayName String?
  cognitive   Json     // JSONB in Postgres
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}