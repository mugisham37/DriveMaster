{
  "RegExpID": "RE::",
  "Style": {
    "comment": "comment",
    "atom": "atom",
    "keyword": "keyword",
    "builtin": "builtin",
    "operator": "operator",
    "identifier": "identifier",
    "property": "property",
    "string": "string",
    "number": "number",
    "regex": "regex"
  },
  "Lex": {
    "comment": {
      "type": "comment",
      "tokens": [
        ["RE::\\/\\*[\\s\\S]*?\\*\\/", "comment"],
        ["RE::\\/\\/.*", "comment"]
      ]
    },
    "string": {
      "type": "simple",
      "tokens": [
        ["RE::\"([^\"\\\\]|\\\\.)*\"", "string"],
        ["RE::'([^'\\\\]|\\\\.)*'", "string"],
        ["RE::`([^`\\\\]|\\\\.)*`", "string"]
      ]
    },
    "number": {
      "type": "simple", 
      "tokens": [
        ["RE::\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b", "number"]
      ]
    },
    "regex": {
      "type": "simple",
      "tokens": [
        ["RE::\\/([^\\/\\\\\\n]|\\\\.)+\\/[gimuy]*", "regex"]
      ]
    },
    "keyword": {
      "type": "simple",
      "tokens": [
        ["RE::\\b(break|case|catch|class|const|continue|debugger|default|delete|do|else|export|extends|finally|for|function|if|import|in|instanceof|let|new|return|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b", "keyword"]
      ]
    },
    "builtin": {
      "type": "simple",
      "tokens": [
        ["RE::\\b(Array|Boolean|Date|Error|Function|JSON|Math|Number|Object|RegExp|String|console|document|window|undefined|null|true|false|Infinity|NaN)\\b", "builtin"]
      ]
    },
    "operator": {
      "type": "simple",
      "tokens": [
        ["RE::[+\\-*\\/=<>!&|^~%?:;,.]", "operator"],
        ["RE::(\\+\\+|--|==|!=|<=|>=|&&|\\|\\||\\+=|-=|\\*=|\\/=|%=|&=|\\|=|\\^=|<<=|>>=|>>>)", "operator"]
      ]
    },
    "identifier": {
      "type": "simple",
      "tokens": [
        ["RE::[a-zA-Z_$][a-zA-Z0-9_$]*", "identifier"]
      ]
    }
  },
  "Parser": [
    "comment",
    "string", 
    "number",
    "regex",
    "keyword",
    "builtin", 
    "operator",
    "identifier"
  ]
}